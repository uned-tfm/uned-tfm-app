import { HttpClient } from '@angular/common/http';
import { TranslateLoader } from '@ngx-translate/core';
import { forkJoin } from 'rxjs/internal/observable/forkJoin';
import { map } from 'rxjs/operators';

export class MultiTranslateHttpLoader implements TranslateLoader {
  constructor(
    private readonly http: HttpClient,
    public resources: Array<{ prefix: string; suffix: string }> = [
      {
        prefix: '/assets/i18n/',
        suffix: '.json'
      }
    ]
  ) {}

  /** Gets the translations from the server */
  getTranslation(lang: string) {
    return forkJoin(
      this.resources.map((config) => this.http.get(`${config.prefix}${lang}${config.suffix}`))
    ).pipe(map((response) => response.reduce((a, b) => ({ ...a, ...b }))));
  }
}
