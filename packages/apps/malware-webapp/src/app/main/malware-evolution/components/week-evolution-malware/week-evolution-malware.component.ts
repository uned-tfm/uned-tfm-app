import { Component, Input, OnChanges } from '@angular/core';
import { EChartsOption } from 'echarts';
import { MalwareEvolutionByWeek } from '@core/malware/malware-evolution/domain/models/malware-evolution';
import { hasValue } from '@core/utils/type-checkers';

@Component({
  selector: 'tfm-week-evolution-malware',
  templateUrl: './week-evolution-malware.component.html',
  styleUrls: ['./week-evolution-malware.component.sass']
})
export class WeekEvolutionMalwareComponent implements OnChanges {
  @Input() weeklyEvolution: MalwareEvolutionByWeek[];

  weekEvolutionOpts: EChartsOption;

  ngOnChanges(): void {
    if (hasValue(this.weeklyEvolution)) {
      this.initMonthSummaryChart();
    }
  }

  formatNumber(num: number): string {
    return new Intl.NumberFormat('ES-es').format(num);
  }

  private initMonthSummaryChart(): void {
    this.weekEvolutionOpts = {
      tooltip: {
        trigger: 'axis',
        axisPointer: {
          type: 'shadow'
        }
      },
      legend: {},
      grid: {},
      xAxis: {
        type: 'category',
        data: this.weeklyEvolution.map((d) => `${d.week}-${d.year}`),
        axisLabel: {
          rotate: 330
        },
        nameLocation: 'middle',
        name: 'Semana del año (semana - año)',
        nameTextStyle: {
          padding: 20,
          fontWeight: 'bold'
        }
      },
      yAxis: {
        type: 'value',
        nameLocation: 'middle',
        name: 'Num. detecciones',
        nameTextStyle: {
          padding: 35,
          fontWeight: 'bold'
        }
      },
      dataZoom: [
        {
          show: true,
          start: 0,
          end: 100,
          height: 20,
          bottom: '30px'
        }
      ],
      series: [
        {
          name: 'Evolución semanal',
          type: 'line',
          showSymbol: false,
          data: this.weeklyEvolution.map((data) => data.count),
          areaStyle: {
            opacity: 0.4
          }
        }
      ],
      color: ['rgb(217,95,14)', 'rgb(254,196,79)']
    };
  }
}
