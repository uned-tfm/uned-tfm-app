import { Component, OnInit } from '@angular/core';
import {
  MalwareEvolutionByCountry,
  MalwareEvolutionByMonth,
  MalwareEvolutionByMonthPeriod,
  MalwareEvolutionByWeek,
  MalwareEvolutionByYearPeriod
} from '@core/malware/malware-evolution/domain/models/malware-evolution';
import {
  findMalwareEvolutionByCountry,
  findMalwareEvolutionByMonth,
  findMalwareEvolutionByMonthPeriod,
  findMalwareEvolutionByWeek,
  findMalwareEvolutionByYearPeriod
} from '../../../../dependencies/use-cases/malware-evolution';

@Component({
  selector: 'app-malware-evolution',
  templateUrl: './malware-evolution.component.html',
  styleUrls: ['./malware-evolution.component.sass']
})
export class MalwareEvolutionComponent implements OnInit {
  private weeklyEvolution: MalwareEvolutionByWeek[];
  private monthEvolution: MalwareEvolutionByMonth[];
  private countryEvolution: MalwareEvolutionByCountry[];

  yearSummary: {
    current: MalwareEvolutionByYearPeriod[];
    previous: MalwareEvolutionByYearPeriod[];
  };
  monthSummary: {
    current: MalwareEvolutionByMonthPeriod[];
    previous: MalwareEvolutionByMonthPeriod[];
  };
  weeklyEvolutionFiltered: MalwareEvolutionByWeek[];
  countryEvolutionFiltered: MalwareEvolutionByCountry[];
  monthEvolutionFiltered: MalwareEvolutionByMonth[];

  async ngOnInit() {
    await this.getChartsData();
  }

  private async getChartsData(): Promise<void> {
    await this.initCountryEvolutionChartData();
    await this.initYearSummaryChartData();
    await this.initMonthSummaryChartData();
    await this.initWeeklyEvolutionChartData();
    await this.initMonthEvolutionChartData();
  }

  onYearSelectionChanged(years: number[]): void {
    this.weeklyEvolutionFiltered = this.weeklyEvolution.filter((d) => years.includes(d.year));
    this.countryEvolutionFiltered = this.countryEvolution.filter((d) => years.includes(d.year));
  }

  private async initYearSummaryChartData(): Promise<void> {
    this.yearSummary = {
      current: await findMalwareEvolutionByYearPeriod({ year: 2023 }),
      previous: await findMalwareEvolutionByYearPeriod({ year: 2022 })
    };
  }

  private async initMonthSummaryChartData(): Promise<void> {
    this.monthSummary = {
      current: await findMalwareEvolutionByMonthPeriod({ year: 2023, month: 4 }),
      previous: await findMalwareEvolutionByMonthPeriod({ year: 2022, month: 3 })
    };
  }

  private async initWeeklyEvolutionChartData(): Promise<void> {
    this.weeklyEvolution = await findMalwareEvolutionByWeek();
    this.weeklyEvolutionFiltered = [...this.weeklyEvolution];
  }

  private async initCountryEvolutionChartData(): Promise<void> {
    this.countryEvolution = await findMalwareEvolutionByCountry();
    this.countryEvolutionFiltered = [...this.countryEvolution];
  }

  private async initMonthEvolutionChartData(): Promise<void> {
    this.monthEvolution = await findMalwareEvolutionByMonth();
    this.monthEvolutionFiltered = [...this.monthEvolution];
  }
}
