import { AfterViewInit, Component } from '@angular/core';
import * as L from 'leaflet';
import { MapService } from '@app/shared/services/map/map.service';
import { isNil } from '@core/utils/type-checkers';
import { DeliveryMethodByCountry } from '@core/malware/delivery-methods/domain/models/delivery-method';
import { findDeliveryMethodByCountry } from '../../../../../../dependencies/use-cases/delivery-methods';

@Component({
  selector: 'tfm-delivery-method-by-country',
  templateUrl: './delivery-method-by-country.component.html',
  styleUrls: ['./delivery-method-by-country.component.sass']
})
export class DeliveryMethodByCountryComponent implements AfterViewInit {
  private map: L.Map;
  private originalCountryData: DeliveryMethodByCountry[] = [];

  mapId = 'map2';
  selectedMethod = 'web_download';

  countryData: DeliveryMethodByCountry[] = [];

  constructor(private readonly mapService: MapService) {}

  async ngAfterViewInit(): Promise<void> {
    const data = await findDeliveryMethodByCountry();
    this.countryData = data.filter((d) => !isNil(d.country) && !isNil(d.deliveryMethod));
    this.originalCountryData = this.countryData;

    this.setSelectedMethod('web_download');
  }

  setSelectedMethod(method: string) {
    this.selectedMethod = method;
    this.countryData = this.originalCountryData.filter((d) => d.deliveryMethod === method);
    this.setMap();
  }

  private setMap(): void {
    if (this.map != null) {
      this.map.remove();
    }

    const data = this.countryData.map((d) => ({ country: d.country, count: d.count }));
    this.map = this.mapService.createNewMapInstance(this.mapId, data, {
      zoomControl: false,
      doubleClickZoom: false,
      closePopupOnClick: false,
      trackResize: false,
      touchZoom: false,
      scrollWheelZoom: false
    });
  }
}
