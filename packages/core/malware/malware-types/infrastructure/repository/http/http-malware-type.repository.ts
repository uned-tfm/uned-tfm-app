import { HttpService } from '../../../../../shared/domain/contracts/http';
import { env } from '../../../../../../config/env';
import { MalwareTypeRepository } from '../../../domain/contracts/malware-type.repository';
import { CountByCountry, CountByMalwareType } from '../../../domain/models/malware-type';

export function malwareTypeRepositoryBuilder({
  httpService
}: {
  httpService: HttpService;
}): MalwareTypeRepository {
  return {
    async findByMalwareType(): Promise<CountByMalwareType[]> {
      const response = await httpService.get<CountByMalwareType[]>(
        `${env.API_URL}/kpis/malware-types?operation=count-by-malware-type`
      );
      return response.data;
    },
    async findByCountry(): Promise<CountByCountry[]> {
      const response = await httpService.get<CountByCountry[]>(
        `${env.API_URL}/kpis/malware-types?operation=count-by-country`
      );
      return response.data;
    },
    async findMoreNumDetections(): Promise<CountByMalwareType[]> {
      const response = await httpService.get<CountByCountry[]>(
        `${env.API_URL}/kpis/malware-types?operation=malware-more-detections`
      );
      return response.data;
    }
  };
}
