import { HttpService } from '../../../../../shared/domain/contracts/http';
import { env } from '../../../../../../config/env';
import { FileFeatureRepository } from '../../../domain/contracts/file-feature.repository';
import {
  FileFeatureByFileType,
  FileFeatureByMalwareAndFileType,
  FileFeatureByMalwareType
} from '../../../domain/models/file-feature';

export function fileFeatureRepositoryBuilder({
  httpService
}: {
  httpService: HttpService;
}): FileFeatureRepository {
  return {
    async findAvgByMalwareType(): Promise<FileFeatureByMalwareType[]> {
      const response = await httpService.get<FileFeatureByMalwareType[]>(
        `${env.API_URL}/kpis/file-features?operation=avg-by-malware`
      );
      return response.data;
    },
    async findAvgByFileType(): Promise<FileFeatureByFileType[]> {
      const response = await httpService.get<FileFeatureByFileType[]>(
        `${env.API_URL}/kpis/file-features?operation=avg-by-file-type`
      );
      return response.data;
    },
    async findByFileType(): Promise<FileFeatureByFileType[]> {
      const response = await httpService.get<FileFeatureByFileType[]>(
        `${env.API_URL}/kpis/file-features?operation=count-by-file-type`
      );
      return response.data;
    },
    async findByMalwareAndFileType(): Promise<FileFeatureByMalwareAndFileType[]> {
      const response = await httpService.get<FileFeatureByMalwareAndFileType[]>(
        `${env.API_URL}/kpis/file-features?operation=file-types-by-malware`
      );
      return response.data;
    }
  };
}
